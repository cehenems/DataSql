import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

import java.util.ArrayList;
import java.util.List;

public class VeriTabani extends SQLiteOpenHelper {
    private static final String DATABASE_NAME = "musteriler.db";
    private static final int DATABASE_VERSION = 1;
    private static final String TABLO_KISILER = "kisiler";
    private static final String ROW_ID = "id";
    private static final String ROW_AD = "ad";
    private static final String ROW_SOYAD = "soyad";
    private static final String ROW_TEL = "tel";
    private static final String ROW_MAIL = "mail";
    private static final String ROW_NO = "no";

    public VeriTabani(Context context) {
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
    }
    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("DROP TABLE IF EXISTS " + TABLO_KISILER);

}
    @Override
    public void onCreate(SQLiteDatabase db) {
        db.execSQL("CREATE TABLE " + TABLO_KISILER + "("
                + ROW_ID + " INTEGER PRIMARY KEY AUTOINCREMENT, "
                + ROW_AD + " TEXT NOT NULL, "
                + ROW_SOYAD + " TEXT NOT NULL, "
                + ROW_TEL + " TEXT NOT NULL, "
                + ROW_MAIL + " TEXT NOT NULL, "
                + ROW_NO + " TEXT NOT NULL)");
    }

    public void veriEkle(String ad, String soyad, String tel, String mail, String no) {
        SQLiteDatabase db = this.getWritableDatabase();
        try {
            ContentValues cv = new ContentValues();
            cv.put(ROW_AD, ad);
            cv.put(ROW_SOYAD, soyad);
            cv.put(ROW_TEL, tel);
            cv.put(ROW_MAIL, mail);
            cv.put(ROW_NO, no);

            db.insert(TABLO_KISILER, null, cv);
        } catch (Exception e) {
            System.out.println("hata : " + e);
        } finally {
            db.close();
        }
    }
    public List<String> Listele() {
        List<String> veriler = new ArrayList<String>();
        SQLiteDatabase db = this.getReadableDatabase();
        try {
            String sutunlar[] = {ROW_ID,ROW_AD,ROW_SOYAD,ROW_TEL,ROW_MAIL,ROW_NO};
            Cursor cursor=db.query(TABLO_KISILER,sutunlar,null,null,null,null,null,null);
            while(cursor.moveToNext()){
                veriler.add(cursor.getInt(0)
                        +"/"+cursor.getString(1)
                        +"/"+cursor.getString(2)
                        +"/"+cursor.getString(3)
                        +"/"+cursor.getString(4)
                        +"/"+cursor.getString(5)
                );
            }
        } catch (Exception e) {
            System.out.println("hata : " + e);
        } finally {
            db.close();
        }
        return veriler;
    }
    public void veriDuzenle(int id,String ad, String soyad, String tel, String mail, String no) {
        SQLiteDatabase db = this.getWritableDatabase();
        try {
            ContentValues cv = new ContentValues();
            cv.put(ROW_AD, ad);
            cv.put(ROW_SOYAD, soyad);
            cv.put(ROW_TEL, tel);
            cv.put(ROW_MAIL, mail);
            cv.put(ROW_NO, no);
            //String duzeltmeAlani = ROW_ID+" = '"+id+"'";
            String duzeltmeAlani = ROW_ID+" = "+id;
            db.update(TABLO_KISILER, cv,duzeltmeAlani,null);
        } catch (Exception e) {
            System.out.println("hata : " + e);
        } finally {
            db.close();
        }
    }
    public void veriSil(int id){
        SQLiteDatabase db = this.getWritableDatabase();
        try {
            String silmeAlani = ROW_ID+" = "+id;
            db.delete(TABLO_KISILER, silmeAlani,null);
        } catch (Exception e) {
            System.out.println("hata : " + e);
        } finally {
            db.close();
        }
    }


}
